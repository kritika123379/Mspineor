{"ast":null,"code":"var _jsxFileName = \"/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ListProperty from \"../../components/listProperty\";\nimport { fetcher } from \"../../shared/globalFunc\";\nexport default (({\n  listing\n}) => {\n  return __jsx(ListProperty, {\n    listing: listing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  });\n});\nexport async function getStaticPaths() {\n  const res = await fetcher('http://localhost:3000/api/getListings');\n  const post = await res.json();\n  let paths = [];\n  post.data.map(item => {\n    paths.push({\n      params: {\n        state: 'nj',\n        city: item.City,\n        address: item.Address\n      }\n    });\n  });\n  return {\n    // Only `/posts/1` and `/posts/2` are generated at build time\n    paths: paths,\n    // Enable statically generating additional pages\n    // For example: `/posts/3`\n    fallback: true\n  };\n}\nexport async function getStaticProps() {\n  const res = await fetcher('http://localhost:3000/api/getListings');\n  const post = await res.json();\n  console.log(\"res\", post);\n  return {\n    props: {\n      listing: post.data\n    }\n  };\n}","map":{"version":3,"sources":["/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/index.js"],"names":["ListProperty","fetcher","listing","getStaticPaths","res","post","json","paths","data","map","item","push","params","state","city","City","address","Address","fallback","getStaticProps","console","log","props"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,gBAAe,CAAC;AACZC,EAAAA;AADY,CAAD,KAET;AACF,SACI,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAND;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMH,OAAO,CAAC,uCAAD,CAAzB;AACA,QAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAF,EAAAA,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AAClBH,IAAAA,KAAK,CAACI,IAAN,CAAW;AAACC,MAAAA,MAAM,EAAE;AAChBC,QAAAA,KAAK,EAAE,IADS;AAEhBC,QAAAA,IAAI,EAAEJ,IAAI,CAACK,IAFK;AAGhBC,QAAAA,OAAO,EAAEN,IAAI,CAACO;AAHE;AAAT,KAAX;AAKH,GAND;AAOA,SAAO;AACL;AACAV,IAAAA,KAAK,EAAEA,KAFF;AAGL;AACA;AACAW,IAAAA,QAAQ,EAAE;AALL,GAAP;AAOH;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMf,GAAG,GAAG,MAAMH,OAAO,CAAC,uCAAD,CAAzB;AACA,QAAMI,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBhB,IAAnB;AACA,SAAO;AACHiB,IAAAA,KAAK,EAAE;AAACpB,MAAAA,OAAO,EAAEG,IAAI,CAACG;AAAf;AADJ,GAAP;AAGH","sourcesContent":["import ListProperty from \"../../components/listProperty\";\nimport { fetcher } from \"../../shared/globalFunc\";\n\nexport default ({\n    listing\n}) => {\n    return (\n        <ListProperty listing={listing}/>\n    )\n}\n\nexport async function getStaticPaths() {\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    const post = await res.json();\n    let paths = [];\n    post.data.map(item => {\n        paths.push({params: {\n            state: 'nj',\n            city: item.City,\n            address: item.Address\n        }})\n    })\n    return {\n      // Only `/posts/1` and `/posts/2` are generated at build time\n      paths: paths,\n      // Enable statically generating additional pages\n      // For example: `/posts/3`\n      fallback: true,\n    }\n}\n\nexport async function getStaticProps(){\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    const post = await res.json();\n    console.log(\"res\", post )\n    return {\n        props: {listing: post.data}\n    }\n}"]},"metadata":{},"sourceType":"module"}