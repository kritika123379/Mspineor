{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/[state]/[city]/[address]/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nexport var __N_SSG = true;\nexport default (function () {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, \"address\");\n});","map":{"version":3,"sources":["/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/[state]/[city]/[address]/index.js"],"names":[],"mappings":";;;;;;AAEA,gBAAe;AAAA,SACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADW;AAAA,CAAf","sourcesContent":["import { fetcher } from \"../../../../../shared/globalFunc\";\n\nexport default () => (\n    <div>address</div>\n)\n\nexport async function getStaticPaths() {\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    // console.log(\"res\", res)\n    if(!!res){\n        const post = await res.json();\n        let paths = [];\n        post.data.map(item => {\n            paths.push({params: {\n                state: 'nj',\n                city: item.City,\n                address: item.Address\n            }})\n        })\n        return {\n          // Only `/posts/1` and `/posts/2` are generated at build time\n          paths: paths,\n          // Enable statically generating additional pages\n          // For example: `/posts/3`\n          fallback: true,\n        }\n    }\n}\n\nexport async function getStaticProps({params}){\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    if(!!res){\n        const post = await res.json();\n        console.log(\"res\")\n        return {\n            props: {listing: post.data}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}