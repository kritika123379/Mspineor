{"ast":null,"code":"var _jsxFileName = \"/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/[state]/[city]/[address]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { fetcher } from \"../../../../../shared/globalFunc\";\nexport default (() => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }\n}, \"address\"));\nexport async function getStaticPaths() {\n  const res = await fetcher('http://localhost:3000/api/getListings'); // console.log(\"res\", res)\n\n  if (!!res) {\n    const post = await res.json();\n    let paths = [];\n    post.data.map(item => {\n      paths.push({\n        params: {\n          state: 'nj',\n          city: item.City,\n          address: item.Address\n        }\n      });\n    });\n    return {\n      // Only `/posts/1` and `/posts/2` are generated at build time\n      paths: paths,\n      // Enable statically generating additional pages\n      // For example: `/posts/3`\n      fallback: true\n    };\n  }\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetcher('http://localhost:3000/api/getListings');\n\n  if (!!res) {\n    const post = await res.json();\n    console.log(\"res\");\n    return {\n      props: {\n        listing: post.data\n      }\n    };\n  }\n}","map":{"version":3,"sources":["/home/b-rave/Documents/jalaj/trulia-clone/hello-next/pages/p/[state]/[city]/[address]/index.js"],"names":["fetcher","getStaticPaths","res","post","json","paths","data","map","item","push","params","state","city","City","address","Address","fallback","getStaticProps","console","log","props","listing"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kCAAxB;AAEA,gBAAe,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAIA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,GAAG,GAAG,MAAMF,OAAO,CAAC,uCAAD,CAAzB,CADmC,CAEnC;;AACA,MAAG,CAAC,CAACE,GAAL,EAAS;AACL,UAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAIC,KAAK,GAAG,EAAZ;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,IAAI,IAAI;AAClBH,MAAAA,KAAK,CAACI,IAAN,CAAW;AAACC,QAAAA,MAAM,EAAE;AAChBC,UAAAA,KAAK,EAAE,IADS;AAEhBC,UAAAA,IAAI,EAAEJ,IAAI,CAACK,IAFK;AAGhBC,UAAAA,OAAO,EAAEN,IAAI,CAACO;AAHE;AAAT,OAAX;AAKH,KAND;AAOA,WAAO;AACL;AACAV,MAAAA,KAAK,EAAEA,KAFF;AAGL;AACA;AACAW,MAAAA,QAAQ,EAAE;AALL,KAAP;AAOH;AACJ;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACP,EAAAA;AAAD,CAA9B,EAAuC;AAC1C,QAAMR,GAAG,GAAG,MAAMF,OAAO,CAAC,uCAAD,CAAzB;;AACA,MAAG,CAAC,CAACE,GAAL,EAAS;AACL,UAAMC,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAElB,IAAI,CAACG;AAAf;AADJ,KAAP;AAGH;AACJ","sourcesContent":["import { fetcher } from \"../../../../../shared/globalFunc\";\n\nexport default () => (\n    <div>address</div>\n)\n\nexport async function getStaticPaths() {\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    // console.log(\"res\", res)\n    if(!!res){\n        const post = await res.json();\n        let paths = [];\n        post.data.map(item => {\n            paths.push({params: {\n                state: 'nj',\n                city: item.City,\n                address: item.Address\n            }})\n        })\n        return {\n          // Only `/posts/1` and `/posts/2` are generated at build time\n          paths: paths,\n          // Enable statically generating additional pages\n          // For example: `/posts/3`\n          fallback: true,\n        }\n    }\n}\n\nexport async function getStaticProps({params}){\n    const res = await fetcher('http://localhost:3000/api/getListings')\n    if(!!res){\n        const post = await res.json();\n        console.log(\"res\")\n        return {\n            props: {listing: post.data}\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}